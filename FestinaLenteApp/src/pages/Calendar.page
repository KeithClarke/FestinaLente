<apex:page tabStyle="Calendar__tab" controller="CalendarController" action="{!init}" id="p">

<link href="{!URLFOR($Resource.FullCalendarZip,'fullcalendar-1.5.4/fullcalendar/fullcalendar.css')}" rel="stylesheet" type="text/css"/>
<link href="{!URLFOR($Resource.FullCalendarZip,'fullcalendar-1.5.4/fullcalendar/fullcalendar.print.css')}" rel="stylesheet" type="text/css" media="print"/>

<script src="{!URLFOR($Resource.FullCalendarZip, 'fullcalendar-1.5.4/jquery/jquery-1.8.1.min.js')}" type="text/javascript" language="javascript"></script>
<script src="{!URLFOR($Resource.FullCalendarZip, 'fullcalendar-1.5.4/fullcalendar/fullcalendar.min.js')}" type="text/javascript" language="javascript"></script>

<script src="{!URLFOR($Resource.QTip)}" type="text/javascript" language="javascript"></script>

    <apex:sectionHeader title="Calendar" help="{!$Page.Help}"/>
    
    <!-- Breadcrumb links; moved into place by jQuery -->
    <apex:outputPanel layout="block" styleClass="ptBreadcrumb" rendered="{! backs.size > 0}">
        <apex:variable var="separate" value="{! (false)}"/>
        <apex:outputText >&nbsp;&#171;&nbsp;Back to:&nbsp;&nbsp;</apex:outputText>
        <apex:repeat value="{!backs}" var="b">
            <apex:outputText rendered="{!separate}">,&nbsp;&nbsp;</apex:outputText>
            <apex:outputLink value="/{!b.id}">{!b.name}</apex:outputLink>
            <apex:variable var="separate" value="{! (true)}"/>
        </apex:repeat>
    </apex:outputPanel>

    <!-- Filtering fields -->
    <apex:form id="f">
        <apex:pageBlock mode="edit" id="pb" title="Filtering">
            <apex:pageBlockSection id="pbs">
            
                <apex:inputField value="{!filter.ShowClassesFreeSpaces__c}" id="showClassesFreeSpaces"/>
                <apex:inputField value="{!filter.Client__c}" id="client"/>
                
                <apex:inputField value="{!filter.ShowClassesFullyBooked__c}" id="showClassesFullyBooked"/>
                <apex:inputField value="{!filter.Coach__c}" id="coach"/>

                <apex:inputField value="{!filter.ShowBookings__c}" id="showBookings"/>
                <apex:inputField value="{!filter.Horse__c}" id="horse"/>
        
                <apex:inputField value="{!filter.ClassType__c}" id="classType"/>
                <apex:inputField value="{!filter.Booking__c}" id="booking"/>

                <apex:outputText />
                <apex:inputField value="{!filter.Class__c}" id="class"/>

                <apex:inputHidden value="{!filter.ViewName__c}" id="viewName"/>
                <apex:inputHidden value="{!filter.ViewStart__c}" id="viewStartDate"/>
                
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>

    <!-- Calendar is rendered here by the fullcalendar Javascript -->
    <apex:pageBlock >
        <div id='calendar'/>
    </apex:pageBlock>

<script type="text/javascript" language="javascript">

$(document).ready(function() {

    // Move breadcrumb
    $('.bPageTitle').append($('.ptBreadcrumb'));
    
    // Style "Show" labels
    $('[for*="p:f:pb:pbs:showClassesFullyBooked"]')
            .css('background-color', '{!FULLY_BOOKED_COLOUR}')
            .css('color', 'white')
            .css('padding', '3px')
            .css('border-radius', '3px')
            ;
    $('[for*="p:f:pb:pbs:showClassesFreeSpaces"]')
            .css('background-color', '{!FREE_SPACES_COLOUR}')
            .css('color', 'white')
            .css('padding', '3px')
            .css('border-radius', '3px')
            ;
    $('[for*="p:f:pb:pbs:showBookings"]')
            .css('background-color', '{!BOOKINGS_COLOUR}')
            .css('color', 'white')
            .css('padding', '3px')
            .css('border-radius', '3px')
            ;
    
    var prefix = '#p\\:f\\:pb\\:pbs\\:';
    var lkid = '_lkid';
    
    var client = $(prefix + 'client');
    var coach = $(prefix + 'coach');
    var horse = $(prefix + 'horse');
    var booking = $(prefix + 'booking');
    var clazz = $(prefix + 'class');
    var classType = $(prefix + 'classType');
    
    var clientLkid = $(prefix + 'client' + lkid);
    var coachLkid= $(prefix + 'coach' + lkid);
    var horseLkid = $(prefix + 'horse' + lkid);
    var bookingLkid = $(prefix + 'booking' + lkid);
    var clazzLkid = $(prefix + 'class' + lkid);
                
    var showClassesFreeSpaces = $(prefix + 'showClassesFreeSpaces');
    var showClassesFullyBooked = $(prefix + 'showClassesFullyBooked');
    var showBookings = $(prefix + 'showBookings');
    
    var formViewName = $(prefix + 'viewName');
    var formViewStart = $(prefix + 'viewStartDate');
    
    // Writing and reading as text in d/m/y format
    var toDateString = function(d) {
        return d ? d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear() : null;
    }
    var toDateObject = function(s) {
        var parts = s.split("/");
        return parts.length == 3 ? new Date(parts[2], parts[1] - 1, parts[0]) : null;
    }
    
    // Defaults to today unless the form has aleady been posted in which case defaults to the posted start date
    var initialDate = formViewStart.val() ? toDateObject(formViewStart.val()) : toDateObject('{!initialDateDmy}');
    
    // These preserve the selection when mon/week/day switch is used
    var selectedStartDate = null;
    var selectedEndDate = null;
    var selectedAllDay = null;
    var viewName = null;
    var inFunction = false;

    // Setup calendar
    var calendar = $('#calendar');
    calendar.fullCalendar({
    
        // General config
        header: {
            left: 'title',
            center: 'month,agendaWeek,agendaDay',
            right: 'prevYear prev,today,next nextYear'
        },
        firstDay: 1,
        defaultView: formViewName.val() ? formViewName.val() : 'agendaWeek',
        allDayDefault: false,
        allDaySlot: false,
        aspectRatio: 2.5,
        minTime: 8,
        maxTime: 21,
        columnFormat: {
            month: 'ddd',
            week: 'ddd, MMM d',
            day: 'ddd, MMM d'
        },
        selectable: true,
    
        // Start date
        year: initialDate.getFullYear(),
        month: initialDate.getMonth(),
        date: initialDate.getDate(),
        
        // Preserve the selection
        select: function(startDate, endDate, allDay, jsEvent, view) {
            selectedStartDate = startDate;
            selectedEndDate = endDate;
            selectedAllDay = allDay;
        },
        viewDisplay: function(view) {
        
            // Keep selection in form fields so any page refresh will preserve them
            formViewName.val(view.name);
            formViewStart.val(toDateString(view.start));

            if (view.name != viewName) {
                if (selectedStartDate) {
                    // Use boolean to avoid infinite loop
                    if (!inFunction) {
                        inFunction = true;
                        calendar.fullCalendar('gotoDate', selectedStartDate);
                        calendar.fullCalendar('select', selectedStartDate, selectedEndDate, selectedAllDay);
                        inFunction = false;
                    }
                }

            } else {
                selectedStartDate = null;
                selectedEndDate = null;
                selectedAllDay = null;
            }
            viewName = view.name;
        },
        
        // Tooltip popup
        eventRender: function(event, element) {
            element.qtip({
                content: event.tooltip,
                position: {
                    corner: {
                        target: 'topLeft',
                        tooltip: 'bottomRight'
                    }
                },
                style: {
                    name: 'light',
                    tip: 'bottomRight'
                }
            });
        },
        
        // Large block of JSON created by the controller
        events: function(start, end, callback) {
            
            var filter = {
            
                Client__c: clientLkid.val(),
                Coach__c: coachLkid.val(),
                Horse__c: horseLkid.val(),
                Booking__c: bookingLkid.val(),
                Class__c: clazzLkid.val(),
                ClassType__c: classType.val(),
                
                ShowClassesFreeSpaces__c: showClassesFreeSpaces.prop('checked'),
                ShowClassesFullyBooked__c: showClassesFullyBooked.prop('checked'),
                ShowBookings__c: showBookings.prop('checked')
            };

            // Javascript dates need formatting to be accepted at the Apex side
            Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.CalendarController.events}',
                    start.toUTCString﻿(),
                    end.toUTCString﻿(),
                    filter,
                    function(result, event) {
                        if (event.status) {
                        
                            // Jobs done here:
                            // 1) In Apex "end" is a reserved word so have to use "ends" instead; change name back
                            // 2) The Apex DateTime is serialized as a millisecond so turn back into a date
                            // 3) The HTML < and > are replaced by entities so turn back
                            for (var i = 0; i < result.length; i++) {
                                var r = result[i];
                                
                                r.start = new Date(r.starts);
                                r.end = new Date(r.ends);
                                r.tooltip = r.tooltip.replace(/&lt\;/g, '<').replace(/&gt\;/g, '>');
                            }
                            
                            // Invoke FullCalendar function
                            callback(result);
                        } else {
                            alert('ERROR:\n' + event.message + '\n' + event.where);
                        }
                    });
        }
    });
    
    // Refresh calendar when a filter value changes
    var f = function() {
        // Timeout so transfer to lkid has completed beforerefetch
        setTimeout(function() {
                calendar.fullCalendar('refetchEvents');
                }, 100);
    };
    
    // No onchange fired on lkid fields as they are programmatically set; just looking at input fields
    client.change(f);
    coach.change(f);
    horse.change(f);
    booking.change(f);
    clazz.change(f);
    classType.change(f);

    showClassesFreeSpaces.change(f);
    showClassesFullyBooked.change(f);
    showBookings.change(f);
    
    // Hack to improve printing
    var w = calendar.css('width');
    var beforePrint = function() {
        calendar.css('width', '7.5in');
        calendar.fullCalendar('render');
    };
    var afterPrint = function() {
        calendar.css('width', w);
        calendar.fullCalendar('render');
    };
    if (window.matchMedia) {
        var mediaQueryList = window.matchMedia('print');
        mediaQueryList.addListener(function(mql) {
            if (mql.matches) {
                beforePrint();
            } else {
                afterPrint();
            }
        });
    }
    window.onbeforeprint = beforePrint;
    window.onafterprint = afterPrint;

});
</script>

</apex:page>